-- Table: public.imported_mock_data
-- DROP TABLE IF EXISTS public.imported_mock_data;
CREATE TABLE IF NOT EXISTS public.imported_mock_data
(
    id integer,
    customer_first_name text COLLATE pg_catalog."default",
    customer_last_name text COLLATE pg_catalog."default",
    customer_age integer,
    customer_email text COLLATE pg_catalog."default",
    customer_country text COLLATE pg_catalog."default",
    customer_postal_code text COLLATE pg_catalog."default",
    customer_pet_type text COLLATE pg_catalog."default",
    customer_pet_name text COLLATE pg_catalog."default",
    customer_pet_breed text COLLATE pg_catalog."default",
    seller_first_name text COLLATE pg_catalog."default",
    seller_last_name text COLLATE pg_catalog."default",
    seller_email text COLLATE pg_catalog."default",
    seller_country text COLLATE pg_catalog."default",
    seller_postal_code text COLLATE pg_catalog."default",
    product_name text COLLATE pg_catalog."default",
    product_category text COLLATE pg_catalog."default",
    product_price real,
    product_quantity integer,
    sale_date date,
    sale_customer_id integer,
    sale_seller_id integer,
    sale_product_id integer,
    sale_quantity integer,
    sale_total_price real,
    store_name text COLLATE pg_catalog."default",
    store_location text COLLATE pg_catalog."default",
    store_city text COLLATE pg_catalog."default",
    store_state text COLLATE pg_catalog."default",
    store_country text COLLATE pg_catalog."default",
    store_phone text COLLATE pg_catalog."default",
    store_email text COLLATE pg_catalog."default",
    pet_category text COLLATE pg_catalog."default",
    product_weight real,
    product_color text COLLATE pg_catalog."default",
    product_size text COLLATE pg_catalog."default",
    product_brand text COLLATE pg_catalog."default",
    product_material text COLLATE pg_catalog."default",
    product_description text COLLATE pg_catalog."default",
    product_rating real,
    product_reviews integer,
    product_release_date date,
    product_expiry_date date,
    supplier_name text COLLATE pg_catalog."default",
    supplier_contact text COLLATE pg_catalog."default",
    supplier_email text COLLATE pg_catalog."default",
    supplier_phone text COLLATE pg_catalog."default",
    supplier_address text COLLATE pg_catalog."default",
    supplier_city text COLLATE pg_catalog."default",
    supplier_country text COLLATE pg_catalog."default"
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.imported_mock_data
    OWNER to postgres;


--------------------------------------------------------------------------------------------------------------------------------------------


-- Table: public.brands
-- DROP TABLE IF EXISTS public.brands;
CREATE TABLE IF NOT EXISTS public.brands
(
    brand_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    brand_name text COLLATE pg_catalog."default",
    CONSTRAINT brands_pkey PRIMARY KEY (brand_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.brands
    OWNER to postgres;


-- Table: public.cities
-- DROP TABLE IF EXISTS public.cities;
CREATE TABLE IF NOT EXISTS public.cities
(
    city_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    city_name text COLLATE pg_catalog."default",
    CONSTRAINT cities_pkey PRIMARY KEY (city_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.cities
    OWNER to postgres;


-- Table: public.colors
-- DROP TABLE IF EXISTS public.colors;
CREATE TABLE IF NOT EXISTS public.colors
(
    color_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    color_name text COLLATE pg_catalog."default",
    CONSTRAINT colors_pkey PRIMARY KEY (color_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.colors
    OWNER to postgres;


-- Table: public.countries
-- DROP TABLE IF EXISTS public.countries;
CREATE TABLE IF NOT EXISTS public.countries
(
    country_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    country_name text COLLATE pg_catalog."default",
    CONSTRAINT countries_pkey PRIMARY KEY (country_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.countries
    OWNER to postgres;


-- Table: public.materials
-- DROP TABLE IF EXISTS public.materials;
CREATE TABLE IF NOT EXISTS public.materials
(
    material_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    material_name text COLLATE pg_catalog."default",
    CONSTRAINT materials_pkey PRIMARY KEY (material_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.materials
    OWNER to postgres;


-- Table: public.pet_breeds
-- DROP TABLE IF EXISTS public.pet_breeds;
CREATE TABLE IF NOT EXISTS public.pet_breeds
(
    pet_breed_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    pet_breed_description text COLLATE pg_catalog."default",
    CONSTRAINT pet_breeds_pkey PRIMARY KEY (pet_breed_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.pet_breeds
    OWNER to postgres;


-- Table: public.pet_types
-- DROP TABLE IF EXISTS public.pet_types;
CREATE TABLE IF NOT EXISTS public.pet_types
(
    pet_type_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    pet_type_name text COLLATE pg_catalog."default",
    CONSTRAINT pet_types_pkey PRIMARY KEY (pet_type_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.pet_types
    OWNER to postgres;


-- Table: public.product_categories
-- DROP TABLE IF EXISTS public.product_categories;
CREATE TABLE IF NOT EXISTS public.product_categories
(
    product_category_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_category_name text COLLATE pg_catalog."default",
    CONSTRAINT product_categories_pkey PRIMARY KEY (product_category_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.product_categories
    OWNER to postgres;


-- Table: public.sizes
-- DROP TABLE IF EXISTS public.sizes;
CREATE TABLE IF NOT EXISTS public.sizes
(
    size_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    size_description text COLLATE pg_catalog."default",
    CONSTRAINT sizes_pkey PRIMARY KEY (size_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.sizes
    OWNER to postgres;


-- Table: public.supplier_names
-- DROP TABLE IF EXISTS public.supplier_names;
CREATE TABLE IF NOT EXISTS public.supplier_names
(
    supplier_name_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    supplier_name_description text COLLATE pg_catalog."default",
    CONSTRAINT supplier_names_pkey PRIMARY KEY (supplier_name_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.supplier_names
    OWNER to postgres;


---------------------------------------------------------------------------------------------------------------------------------------------


-- Table: public.customers
-- DROP TABLE IF EXISTS public.customers;
CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    customer_first_name text COLLATE pg_catalog."default",
    customer_last_name text COLLATE pg_catalog."default",
    customer_age integer,
    customer_email text COLLATE pg_catalog."default",
    customer_postal_code text COLLATE pg_catalog."default",
    customer_pet_name text COLLATE pg_catalog."default",
    customer_country_id integer NOT NULL,
    customer_pet_type_id integer NOT NULL,
    customer_pet_breed_id integer NOT NULL,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
    CONSTRAINT country FOREIGN KEY (customer_country_id)
        REFERENCES public.countries (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT pet_breed FOREIGN KEY (customer_pet_breed_id)
        REFERENCES public.pet_breeds (pet_breed_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT pet_type FOREIGN KEY (customer_pet_type_id)
        REFERENCES public.pet_types (pet_type_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.customers
    OWNER to postgres;


-- Table: public.products
-- DROP TABLE IF EXISTS public.products;
CREATE TABLE IF NOT EXISTS public.products
(
    product_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_name text COLLATE pg_catalog."default",
    product_price real,
    product_category_id integer NOT NULL,
    product_weight real,
    product_color_id integer,
    product_size_id integer,
    product_brand_id integer,
    product_material_id integer,
    product_description text COLLATE pg_catalog."default",
    product_rating real,
    product_reviews integer,
    product_release_date date,
    product_expiry_date date,
    product_quantity integer,
    CONSTRAINT products_pkey PRIMARY KEY (product_id),
    CONSTRAINT brand FOREIGN KEY (product_brand_id)
        REFERENCES public.brands (brand_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT color FOREIGN KEY (product_color_id)
        REFERENCES public.colors (color_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT material FOREIGN KEY (product_material_id)
        REFERENCES public.materials (material_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT product_category FOREIGN KEY (product_category_id)
        REFERENCES public.product_categories (product_category_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT size FOREIGN KEY (product_size_id)
        REFERENCES public.sizes (size_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.products
    OWNER to postgres;


-- Table: public.sellers
-- DROP TABLE IF EXISTS public.sellers;
CREATE TABLE IF NOT EXISTS public.sellers
(
    seller_id integer NOT NULL,
    seller_first_name text COLLATE pg_catalog."default",
    seller_last_name text COLLATE pg_catalog."default",
    seller_email text COLLATE pg_catalog."default",
    seller_country_id integer,
    seller_postal_code text COLLATE pg_catalog."default",
    CONSTRAINT sellers_pkey PRIMARY KEY (seller_id),
    CONSTRAINT country_id FOREIGN KEY (seller_country_id)
        REFERENCES public.countries (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.sellers
    OWNER to postgres;


-- Table: public.stores
-- DROP TABLE IF EXISTS public.stores;
CREATE TABLE IF NOT EXISTS public.stores
(
    store_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    store_name text COLLATE pg_catalog."default",
    store_location text COLLATE pg_catalog."default",
    store_city_id integer,
    store_state text COLLATE pg_catalog."default",
    store_country_id integer,
    store_phone text COLLATE pg_catalog."default",
    store_email text COLLATE pg_catalog."default",
    CONSTRAINT stores_pkey PRIMARY KEY (store_id),
    CONSTRAINT city FOREIGN KEY (store_city_id)
        REFERENCES public.cities (city_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT country FOREIGN KEY (store_country_id)
        REFERENCES public.countries (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.stores
    OWNER to postgres;


-- Table: public.pet_categories
-- DROP TABLE IF EXISTS public.pet_categories;
CREATE TABLE IF NOT EXISTS public.pet_categories
(
    pet_category_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    pet_category_name text COLLATE pg_catalog."default",
    CONSTRAINT pet_categories_pkey PRIMARY KEY (pet_category_id)
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.pet_categories
    OWNER to postgres;


-- Table: public.suppliers
-- DROP TABLE IF EXISTS public.suppliers;
CREATE TABLE IF NOT EXISTS public.suppliers
(
    supplier_contact_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    supplier_contact text COLLATE pg_catalog."default",
    supplier_email text COLLATE pg_catalog."default",
    supplier_phone text COLLATE pg_catalog."default",
    supplier_address text COLLATE pg_catalog."default",
    supplier_city_id integer,
    supplier_country_id integer,
    supplier_name_id integer,
    CONSTRAINT suppliers_pkey PRIMARY KEY (supplier_contact_id),
    CONSTRAINT city FOREIGN KEY (supplier_city_id)
        REFERENCES public.cities (city_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT country FOREIGN KEY (supplier_country_id)
        REFERENCES public.countries (country_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT supplier_name FOREIGN KEY (supplier_name_id)
        REFERENCES public.supplier_names (supplier_name_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.suppliers
    OWNER to postgres;


----------------------------------------------------------------------------------------------------------------------------------


-- Table: public.sales
-- DROP TABLE IF EXISTS public.sales;
CREATE TABLE IF NOT EXISTS public.sales
(
    sale_id integer NOT NULL,
    sale_customer_id integer,
    sale_seller_id integer,
    sale_product_id integer,
    sale_quantity integer,
    sale_total_price real,
    sale_store_id integer,
    sale_pet_category_id integer,
    sale_supplier_contact_id integer,
    sale_date date,
    CONSTRAINT sales_pkey PRIMARY KEY (sale_id),
    CONSTRAINT customer FOREIGN KEY (sale_customer_id)
        REFERENCES public.customers (customer_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT pet_category FOREIGN KEY (sale_pet_category_id)
        REFERENCES public.pet_categories (pet_category_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT product FOREIGN KEY (sale_product_id)
        REFERENCES public.products (product_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT seller FOREIGN KEY (sale_seller_id)
        REFERENCES public.sellers (seller_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT store FOREIGN KEY (sale_store_id)
        REFERENCES public.stores (store_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT supplier_contact FOREIGN KEY (sale_supplier_contact_id)
        REFERENCES public.suppliers (supplier_contact_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)
TABLESPACE pg_default;
ALTER TABLE IF EXISTS public.sales
    OWNER to postgres;